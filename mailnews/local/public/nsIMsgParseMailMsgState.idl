/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"

interface nsIMsgDatabase;
interface nsIMsgDBHdr;
interface nsIOutputStream;

%{C++
#include "nsIMsgDatabase.h"
#include "nsIMsgHdr.h"
%}

typedef long nsMailboxParseState;

[scriptable, uuid(abf6a8e2-955e-4952-a295-b71d45f770cf)]
interface nsIMsgParseMailMsgState : nsISupports {

    attribute unsigned long envelopePos;
    void SetMailDB(in nsIMsgDatabase aDatabase);
    /*
     * Set a backup mail database, whose data will be read during parsing to
     * attempt to recover message metadata
     *
     * @param aDatabase   the backup database
     */
    void SetBackupMailDB(in nsIMsgDatabase aDatabase);
    void Clear();

    void ParseAFolderLine(in string line, in unsigned long lineLength);
    /// db header for message we're currently parsing
    attribute nsIMsgDBHdr newMsgHdr;
    void FinishHeader();

    long GetAllHeaders(out string headers);
    readonly attribute string headers;
  attribute nsMailboxParseState state;
    /* these are nsMailboxParseState */
    const long ParseEnvelopeState=0;
    const long ParseHeadersState=1;
    const long ParseBodyState=2;
};

