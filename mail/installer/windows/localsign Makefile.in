# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

DEPTH		= @DEPTH@
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

include $(MOZILLA_SRCDIR)/toolkit/mozapps/installer/package-name.mk

CONFIG_DIR = instgen
SFX_MODULE = $(topsrcdir)/other-licenses/7zstub/firemail/7zSD.sfx

DEFINES += -DMOZ_APP_VERSION=$(MOZ_APP_VERSION)
PRE_RELEASE_SUFFIX := ""
DEFINES += -DPRE_RELEASE_SUFFIX="$(PRE_RELEASE_SUFFIX)"

ifdef MOZ_UPDATER
DEFINES += -DMOZ_UPDATER=1
endif

INSTALLER_FILES = \
	app.tag \
	nsis/installer.nsi \
	nsis/uninstaller.nsi \
	nsis/shared.nsh \
	$(NULL)

ifdef MOZ_MAINTENANCE_SERVICE
INSTALLER_FILES += \
	nsis/maintenanceservice_installer.nsi \
	$(NULL)
endif


BRANDING_FILES = \
	branding.nsi \
	wizHeader.bmp \
	wizHeaderRTL.bmp \
	wizWatermark.bmp \
	$(NULL)

DEFINES += \
	-DAB_CD=$(AB_CD) \
	-DMOZ_APP_NAME=$(MOZ_APP_NAME) \
	-DMOZ_APP_DISPLAYNAME=${MOZ_APP_DISPLAYNAME} \
	-DMOZILLA_VERSION=${MOZILLA_VERSION} \
	$(NULL)

# path config
SIGNTOOL = ../../../../shelltools/tools/cmd-sign/signtool.exe
COREPATH = ../../../installer-stage/core
PFXPATH = ../../../../shelltools/SecurityCertificate/firemail.pfx
PASSWORD = Firemail
TIMESTAMP = http://localhost
SETUPPATH = ../../../mail/installer/windows/instgen
uninstallPATH = ../../../installer-stage/core/uninstall
	
include $(topsrcdir)/config/config.mk

installer::
	$(MAKE) -C .. installer-stage
	
# sign the exe and dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/Firemail.exe
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/crashreporter.exe
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/plugin-container.exe
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/WSEnable.exe
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/updater.exe
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/maintenanceservice.exe
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/AccessibleMarshal.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/D3DCompiler_43.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/d3dx9_43.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/freebl3.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/gkmedias.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/libEGL.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/libGLESv2.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/MapiProxy.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/mozalloc.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/mozglue.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/mozjs.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/mozMapi32.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/mozsqlite3.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/nsldap32v60.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/nsldappr32v60.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/nsldif32v60.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/nspr4.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/nss3.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/nssckbi.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/nssdbm3.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/nssutil3.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/plc4.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/plds4.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/smime3.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/softokn3.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/ssl3.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/xul.dll
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(COREPATH)/xpcom.dll
	$(MAKE) $(CONFIG_DIR)/setup.exe
	
# sign the setup.exe
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(SETUPPATH)/setup.exe
# sign the helper.exe
	$(SIGNTOOL) sign //f $(PFXPATH) //p $(PASSWORD) $(uninstallPATH)/helper.exe

# For building the uninstaller during the application build so it can be
# included for mar file generation.
uninstaller::
	$(RM) -r $(CONFIG_DIR) && mkdir $(CONFIG_DIR)
	$(INSTALL) $(addprefix $(srcdir)/,$(INSTALLER_FILES)) $(CONFIG_DIR)
	$(INSTALL) $(addprefix $(DIST)/branding/,$(BRANDING_FILES)) $(CONFIG_DIR)
	$(PYTHON) $(MOZILLA_SRCDIR)/config/Preprocessor.py -Fsubstitution $(DEFINES) $(ACDEFINES) \
	  $(srcdir)/nsis/defines.nsi.in > $(CONFIG_DIR)/defines.nsi
	$(PYTHON) $(MOZILLA_SRCDIR)/toolkit/mozapps/installer/windows/nsis/preprocess-locale.py \
	  --preprocess-locale $(MOZILLA_SRCDIR) \
	  $(call EXPAND_LOCALE_SRCDIR,mail/locales)/installer $(AB_CD) $(CONFIG_DIR)

# For building the maintenanceservice installer
ifdef MOZ_MAINTENANCE_SERVICE
maintenanceservice_installer::
	$(INSTALL) $(addprefix $(srcdir)/,$(INSTALLER_FILES)) $(CONFIG_DIR)
	$(PYTHON) $(MOZILLA_SRCDIR)/config/Preprocessor.py -Fsubstitution $(DEFINES) $(ACDEFINES) \
	  $(srcdir)/nsis/defines.nsi.in > $(CONFIG_DIR)/defines.nsi
	$(PYTHON) $(MOZILLA_SRCDIR)/toolkit/mozapps/installer/windows/nsis/preprocess-locale.py \
	  --preprocess-locale $(MOZILLA_SRCDIR) \
	  $(call EXPAND_LOCALE_SRCDIR,mail/locales)/installer $(AB_CD) $(CONFIG_DIR)
endif

$(CONFIG_DIR)/setup.exe::
	$(RM) -r $(CONFIG_DIR) && mkdir $(CONFIG_DIR)
	$(INSTALL) $(addprefix $(srcdir)/,$(INSTALLER_FILES)) $(CONFIG_DIR)
	$(INSTALL) $(addprefix $(DIST)/branding/,$(BRANDING_FILES)) $(CONFIG_DIR)
	$(PYTHON) $(MOZILLA_SRCDIR)/config/Preprocessor.py -Fsubstitution $(DEFINES) $(ACDEFINES) \
	  $(srcdir)/nsis/defines.nsi.in > $(CONFIG_DIR)/defines.nsi
	$(PYTHON) $(MOZILLA_SRCDIR)/toolkit/mozapps/installer/windows/nsis/preprocess-locale.py \
	  --preprocess-locale $(MOZILLA_SRCDIR) \
	  $(call EXPAND_LOCALE_SRCDIR,mail/locales)/installer $(AB_CD) $(CONFIG_DIR)

include $(topsrcdir)/config/rules.mk
include $(MOZILLA_SRCDIR)/toolkit/mozapps/installer/windows/nsis/makensis.mk
